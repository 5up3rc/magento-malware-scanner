#!/usr/bin/env python3

import re

SOURCES = ('backend.yar', 'frontend.yar')

yara_match_pattern = '\$ = (?:/(.+)/|"(.+)")\s*\n'

def fixed_to_regex(f):
	# we should NOT escape single quotes (what re.escape does) for 
	# mysterious reasons, see http://stackoverflow.com/questions/41325348/escape-puzzle-why-does-grep-ignore-escaping-of-single-quote

	unescaped = f.decode('string_escape')
	escaped = re.sub('([\[\]\(\)\{\}\.\+\*\?\$])', r'\\\1', unescaped)
	return escaped


def parse(fh):
	# print("parsing")
	p = set()
	for line in fh:
		# print(line)
		m = re.search(yara_match_pattern, line)
		if m:
			if m.group(1): # regex
				pattern = m.group(1)
			else: # fixed string, need to un-escape and then escape regex chars
				pattern = fixed_to_regex(m.group(2))
			p.add(pattern)
		# else:
			# print("no match", line)
	return p


if __name__ == '__main__':
	
	patterns = set()

	for path in SOURCES:
		# print("opening", path	)
		with open('rules/' + path) as fh:
			patterns = patterns.union(parse(fh))

	for p in patterns:
		print(p)